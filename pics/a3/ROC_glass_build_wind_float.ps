%!PS-Adobe-2.0
%%Title: ROC_glass_build_wind_float.ps
%%Creator: gnuplot 4.4 patchlevel 0
%%CreationDate: Sun Feb 13 15:54:58 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -53 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (ROC_glass_build_wind_float.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 0)
  /Author (sebi)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Feb 13 15:54:58 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (January 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
1.000 UL
LTb
720 320 M
63 0 V
6176 0 R
-63 0 V
stroke
624 320 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0)]
] -53.3 MRshow
1.000 UL
LTb
720 1168 M
63 0 V
6176 0 R
-63 0 V
stroke
624 1168 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.2)]
] -53.3 MRshow
1.000 UL
LTb
720 2016 M
63 0 V
6176 0 R
-63 0 V
stroke
624 2016 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.4)]
] -53.3 MRshow
1.000 UL
LTb
720 2863 M
63 0 V
6176 0 R
-63 0 V
stroke
624 2863 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.6)]
] -53.3 MRshow
1.000 UL
LTb
720 3711 M
63 0 V
6176 0 R
-63 0 V
stroke
624 3711 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.8)]
] -53.3 MRshow
1.000 UL
LTb
720 4559 M
63 0 V
6176 0 R
-63 0 V
stroke
624 4559 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 1)]
] -53.3 MRshow
1.000 UL
LTb
720 320 M
0 63 V
0 4176 R
0 -63 V
stroke
720 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0)]
] -53.3 MCshow
1.000 UL
LTb
1344 320 M
0 63 V
0 4176 R
0 -63 V
stroke
1344 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.1)]
] -53.3 MCshow
1.000 UL
LTb
1968 320 M
0 63 V
0 4176 R
0 -63 V
stroke
1968 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.2)]
] -53.3 MCshow
1.000 UL
LTb
2592 320 M
0 63 V
0 4176 R
0 -63 V
stroke
2592 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.3)]
] -53.3 MCshow
1.000 UL
LTb
3216 320 M
0 63 V
0 4176 R
0 -63 V
stroke
3216 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.4)]
] -53.3 MCshow
1.000 UL
LTb
3840 320 M
0 63 V
0 4176 R
0 -63 V
stroke
3840 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.5)]
] -53.3 MCshow
1.000 UL
LTb
4463 320 M
0 63 V
0 4176 R
0 -63 V
stroke
4463 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.6)]
] -53.3 MCshow
1.000 UL
LTb
5087 320 M
0 63 V
0 4176 R
0 -63 V
stroke
5087 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.7)]
] -53.3 MCshow
1.000 UL
LTb
5711 320 M
0 63 V
0 4176 R
0 -63 V
stroke
5711 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.8)]
] -53.3 MCshow
1.000 UL
LTb
6335 320 M
0 63 V
0 4176 R
0 -63 V
stroke
6335 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.9)]
] -53.3 MCshow
1.000 UL
LTb
6959 320 M
0 63 V
0 4176 R
0 -63 V
stroke
6959 160 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 1)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
720 4559 N
720 320 L
6239 0 V
0 4239 V
-6239 0 V
Z stroke
3839 4799 M
[ [(Helvetica) 160.0 0.0 true true 0 (ROC glass build wind float)]
] -53.3 MCshow
0.900 UP
1.000 UL
LTb
1.000 UL
LTb
5943 383 N
0 320 V
920 0 V
0 -320 V
-920 0 V
Z stroke
5943 703 M
920 0 V
% Begin plot #1
0.900 UP
stroke
LT0
LCb setrgbcolor
6231 623 M
[ [(Helvetica) 160.0 0.0 true true 0 (J48)]
] -53.3 MRshow
LT0
6327 623 M
440 0 V
192 3936 R
3969 3893 L
-129 0 V
-174 0 V
-43 0 V
-347 0 V
-520 0 V
2626 3772 L
-216 -61 V
-130 -60 V
0 -243 V
-87 0 V
-130 -60 V
-43 0 V
-174 0 V
-43 0 V
-86 0 V
-87 0 V
1500 3227 L
0 -61 V
-43 0 V
-44 0 V
-43 -181 V
1240 2863 L
-43 -181 V
0 -61 V
0 -60 V
0 -182 V
-44 -182 V
1023 1652 L
6959 4559 Pls
3969 3893 Pls
3840 3893 Pls
3666 3893 Pls
3623 3893 Pls
3276 3893 Pls
2756 3893 Pls
2626 3772 Pls
2410 3711 Pls
2280 3651 Pls
2280 3408 Pls
2193 3408 Pls
2063 3348 Pls
2020 3348 Pls
1846 3348 Pls
1803 3348 Pls
1717 3348 Pls
1630 3348 Pls
1500 3227 Pls
1500 3166 Pls
1457 3166 Pls
1413 3166 Pls
1370 2985 Pls
1240 2863 Pls
1197 2682 Pls
1197 2621 Pls
1197 2561 Pls
1197 2379 Pls
1153 2197 Pls
1023 1652 Pls
6547 623 Pls
% End plot #1
% Begin plot #2
0.900 UP
1.000 UL
LT1
LCb setrgbcolor
6231 463 M
[ [(Helvetica) 160.0 0.0 true true 0 (NB)]
] -53.3 MRshow
LT1
6327 463 M
440 0 V
192 4096 R
-43 0 V
-44 0 V
-43 0 V
-43 0 V
-44 0 V
-43 0 V
-43 0 V
-44 0 V
-43 0 V
-43 0 V
-44 0 V
-43 0 V
-43 0 V
-44 0 V
-43 0 V
-43 0 V
-44 0 V
-43 0 V
-43 0 V
-44 0 V
-43 0 V
-43 0 V
-44 0 V
-43 0 V
-43 0 V
0 -61 V
-43 0 V
-44 0 V
-43 0 V
-43 0 V
-44 0 V
-43 0 V
-43 0 V
-44 0 V
-43 0 V
-43 0 V
-44 0 V
-43 0 V
-43 0 V
-44 0 V
-43 0 V
-43 0 V
-44 0 V
-43 0 V
-43 0 V
-44 0 V
-43 0 V
-43 0 V
-44 0 V
-43 0 V
-43 0 V
-44 0 V
-43 0 V
-43 0 V
-44 0 V
-43 0 V
-43 0 V
-44 0 V
-43 0 V
-43 0 V
-44 0 V
-43 0 V
-43 0 V
-44 0 V
-43 0 V
-43 0 V
0 -60 V
-44 0 V
0 -61 V
-43 0 V
-43 0 V
0 -60 V
0 -61 V
-44 0 V
0 -60 V
0 -61 V
0 -60 V
-43 0 V
0 -61 V
-43 0 V
0 -61 V
-43 0 V
0 -60 V
-44 0 V
0 -61 V
0 -60 V
-43 0 V
-43 0 V
0 -61 V
-44 0 V
-43 0 V
-43 0 V
-44 0 V
-43 0 V
0 -60 V
-43 0 V
0 -61 V
-44 0 V
0 -60 V
-43 0 V
-43 0 V
0 -61 V
stroke 3320 3469 M
0 -61 V
0 -60 V
-44 0 V
-43 0 V
0 -61 V
0 -60 V
0 -61 V
-43 0 V
-44 0 V
0 -60 V
0 -61 V
-43 0 V
-43 0 V
0 -60 V
0 -61 V
-44 0 V
-43 0 V
0 -61 V
-43 0 V
-44 0 V
0 -60 V
0 -61 V
-43 0 V
0 -60 V
-43 0 V
-44 0 V
0 -61 V
0 -60 V
-43 0 V
-43 0 V
-44 0 V
0 -61 V
-43 0 V
0 -60 V
-43 0 V
-44 0 V
-43 0 V
-43 0 V
0 -61 V
-44 0 V
0 -61 V
-43 0 V
-43 0 V
0 -60 V
0 -61 V
0 -60 V
-44 0 V
0 -61 V
0 -60 V
-43 0 V
-43 0 V
-44 0 V
0 -61 V
-43 0 V
0 -61 V
-43 0 V
0 -60 V
-44 0 V
-43 0 V
-43 0 V
-44 0 V
0 -61 V
-43 0 V
0 -60 V
0 -61 V
-43 0 V
-43 0 V
-44 0 V
0 -60 V
-43 0 V
-43 0 V
0 -61 V
0 -60 V
-44 0 V
0 -61 V
-43 0 V
0 -61 V
-43 0 V
0 -60 V
0 -61 V
0 -60 V
-44 0 V
0 -61 V
0 -60 V
0 -61 V
-43 0 V
0 -60 V
0 -61 V
-43 0 V
-44 0 V
0 -61 V
-43 0 V
-43 0 V
-44 0 V
0 -60 V
-43 0 V
-43 0 V
-44 0 V
0 -61 V
0 -60 V
0 -61 V
0 -60 V
-43 0 V
0 -61 V
stroke 980 441 M
-43 0 V
-44 0 V
-43 0 V
-43 0 V
0 -60 V
-44 0 V
0 -61 V
6959 4559 Crs
6916 4559 Crs
6872 4559 Crs
6829 4559 Crs
6786 4559 Crs
6742 4559 Crs
6699 4559 Crs
6656 4559 Crs
6612 4559 Crs
6569 4559 Crs
6526 4559 Crs
6482 4559 Crs
6439 4559 Crs
6396 4559 Crs
6352 4559 Crs
6309 4559 Crs
6266 4559 Crs
6222 4559 Crs
6179 4559 Crs
6136 4559 Crs
6092 4559 Crs
6049 4559 Crs
6006 4559 Crs
5962 4559 Crs
5919 4559 Crs
5876 4559 Crs
5876 4498 Crs
5833 4498 Crs
5789 4498 Crs
5746 4498 Crs
5703 4498 Crs
5659 4498 Crs
5616 4498 Crs
5573 4498 Crs
5529 4498 Crs
5486 4498 Crs
5443 4498 Crs
5399 4498 Crs
5356 4498 Crs
5313 4498 Crs
5269 4498 Crs
5226 4498 Crs
5183 4498 Crs
5139 4498 Crs
5096 4498 Crs
5053 4498 Crs
5009 4498 Crs
4966 4498 Crs
4923 4498 Crs
4879 4498 Crs
4836 4498 Crs
4793 4498 Crs
4749 4498 Crs
4706 4498 Crs
4663 4498 Crs
4619 4498 Crs
4576 4498 Crs
4533 4498 Crs
4489 4498 Crs
4446 4498 Crs
4403 4498 Crs
4359 4498 Crs
4316 4498 Crs
4273 4498 Crs
4229 4498 Crs
4186 4498 Crs
4143 4498 Crs
4143 4438 Crs
4099 4438 Crs
4099 4377 Crs
4056 4377 Crs
4013 4377 Crs
4013 4317 Crs
4013 4256 Crs
3969 4256 Crs
3969 4196 Crs
3969 4135 Crs
3969 4075 Crs
3926 4075 Crs
3926 4014 Crs
3883 4014 Crs
3883 3953 Crs
3840 3953 Crs
3840 3893 Crs
3796 3893 Crs
3796 3832 Crs
3796 3772 Crs
3753 3772 Crs
3710 3772 Crs
3710 3711 Crs
3666 3711 Crs
3623 3711 Crs
3580 3711 Crs
3536 3711 Crs
3493 3711 Crs
3493 3651 Crs
3450 3651 Crs
3450 3590 Crs
3406 3590 Crs
3406 3530 Crs
3363 3530 Crs
3320 3530 Crs
3320 3469 Crs
3320 3408 Crs
3320 3348 Crs
3276 3348 Crs
3233 3348 Crs
3233 3287 Crs
3233 3227 Crs
3233 3166 Crs
3190 3166 Crs
3146 3166 Crs
3146 3106 Crs
3146 3045 Crs
3103 3045 Crs
3060 3045 Crs
3060 2985 Crs
3060 2924 Crs
3016 2924 Crs
2973 2924 Crs
2973 2863 Crs
2930 2863 Crs
2886 2863 Crs
2886 2803 Crs
2886 2742 Crs
2843 2742 Crs
2843 2682 Crs
2800 2682 Crs
2756 2682 Crs
2756 2621 Crs
2756 2561 Crs
2713 2561 Crs
2670 2561 Crs
2626 2561 Crs
2626 2500 Crs
2583 2500 Crs
2583 2440 Crs
2540 2440 Crs
2496 2440 Crs
2453 2440 Crs
2410 2440 Crs
2410 2379 Crs
2366 2379 Crs
2366 2318 Crs
2323 2318 Crs
2280 2318 Crs
2280 2258 Crs
2280 2197 Crs
2280 2137 Crs
2236 2137 Crs
2236 2076 Crs
2236 2016 Crs
2193 2016 Crs
2150 2016 Crs
2106 2016 Crs
2106 1955 Crs
2063 1955 Crs
2063 1894 Crs
2020 1894 Crs
2020 1834 Crs
1976 1834 Crs
1933 1834 Crs
1890 1834 Crs
1846 1834 Crs
1846 1773 Crs
1803 1773 Crs
1803 1713 Crs
1803 1652 Crs
1760 1652 Crs
1717 1652 Crs
1673 1652 Crs
1673 1592 Crs
1630 1592 Crs
1587 1592 Crs
1587 1531 Crs
1587 1471 Crs
1543 1471 Crs
1543 1410 Crs
1500 1410 Crs
1500 1349 Crs
1457 1349 Crs
1457 1289 Crs
1457 1228 Crs
1457 1168 Crs
1413 1168 Crs
1413 1107 Crs
1413 1047 Crs
1413 986 Crs
1370 986 Crs
1370 926 Crs
1370 865 Crs
1327 865 Crs
1283 865 Crs
1283 804 Crs
1240 804 Crs
1197 804 Crs
1153 804 Crs
1153 744 Crs
1110 744 Crs
1067 744 Crs
1023 744 Crs
1023 683 Crs
1023 623 Crs
1023 562 Crs
1023 502 Crs
980 502 Crs
980 441 Crs
937 441 Crs
893 441 Crs
850 441 Crs
807 441 Crs
807 381 Crs
763 381 Crs
763 320 Crs
6547 463 Crs
% End plot #2
1.000 UL
LTb
720 4559 N
720 320 L
6239 0 V
0 4239 V
-6239 0 V
Z stroke
0.900 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
